workspace = { members = ["examples/vector_store_surrealdb"] }
[package]
name = "langchain-rust"
version = "3.1.1"
edition = "2021"
publish = true
repository = "https://github.com/Abraxas-365/langchain-rust"
license = "MIT"
description = "LangChain for Rust, the easiest way to write LLM-based programs in Rust"
keywords = ["chain", "chatgpt", "llm", "langchain"]  # List of keywords related to your crate
documentation = "https://langchain-rust.sellie.tech/get-started/quickstart"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
scraper = "0.19"
serde = { version = "1.0", features = ["derive"] }
async-trait = "0.1.79"
tokio = { version = "1", features = ["full"] }
reqwest = { version = "0.11", features = ["json"] }
serde_json = "1.0"
futures ="0.3"
regex = "1.10.3"
log = "0.4.21"
html-escape = "0.2.13"
reqwest-eventsource = "0.5.0"
async-openai = "0.19.1"
mockito = "1.4.0"
tiktoken-rs = "0.5.8"
sqlx = { version = "0.7.4", default-features = false, features = ["postgres", "sqlite", "runtime-tokio-native-tls", "json", "uuid" ], optional = true }
uuid = {version = "1.8.0", features = ["v4"], optional = true }
pgvector = {version = "0.3.2", features = ["postgres", "sqlx"], optional = true }
text-splitter = { version = "0.7", features = ["tiktoken-rs","markdown"] }
surrealdb = { version = "1.3.1", optional = true, default-features = false }
csv = "1.3.0"
urlencoding = "2.1.3"
lopdf = { version = "0.32.0", features = ["pom", "pom_parser"] }
thiserror = "1.0.58"
futures-util = "0.3.30"
async-stream = "0.3.5"
tokio-stream = "0.1.15"
secrecy = "0.8.0"
readability = "0.3.0"
url = "2.5.0"

[features]
default = []
postgres = ["pgvector", "sqlx", "uuid"]
surrealdb = ["dep:surrealdb"]
sqlite = ["sqlx"]

[dev-dependencies]
tokio-test = "0.4.4"
testcontainers = "0.15"
